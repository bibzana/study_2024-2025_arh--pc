%include 'in_out.asm'

SECTION .data
prim DB 'f(x) = 12x - 7',0             ; Описание функции
otv DB 'Результат: ',0                  ; Сообщение перед выводом результата

SECTION .text
GLOBAL _start

_start:
    pop ecx                               ; Получаем количество аргументов (n)
    sub ecx, 1                            ; n - 1 (пропускаем первый, так как он - общее количество)

    mov esi, 0                            ; Сумма результатов функции
    mov eax, prim                         ; Вывод описания функции
    call sprintLF

next:
    cmp ecx, 0                            ; Проверяем, есть ли еще аргументы
    jz _end                                ; Если нет, переходим к концу

    pop eax                               ; Получаем аргумент x
    call atoi                             ; Преобразуем строку в число

    ; Теперь выполняем f(x) = 12x - 7
    mov ebx, 12                           ; Загружаем 12 в ebx
    imul eax, ebx                         ; Умножаем на 12 (12 * x)
    sub eax, 7                            ; Вычитаем 7

    add esi, eax                          ; Добавляем к общей сумме

    dec ecx                               ; Уменьшаем количество оставшихся аргументов
    jmp next                              ; Переходим к следующему аргументу

_end:
    mov eax, otv                          ; Сообщение для вывода результата
    call sprint                           ; Вывод сообщения
    mov eax, esi                          ; Переход к сумме
    call iprintLF                        ; Вывод суммы результата
    call quit                            ; Завершение программы

